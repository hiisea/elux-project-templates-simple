<% if(render ==='tpl'){ -%>
<template>
  <List v-if="listView === 'list'" />
  <Detail v-if="itemView === 'detail' && itemDetail" :itemDetail="itemDetail" />
  <Edit v-if="itemView === 'edit' && itemDetail" :itemDetail="itemDetail" :dispatch="dispatch" />
</template>
<% } -%>
<% if(framework ==='reactRedux'){ -%>
import {FC} from 'react';
import {Dispatch, connectRedux} from '@elux/<%= elux %>';
<% }else{ -%>
import {defineComponent, computed, DefineComponent} from 'vue';
import {Dispatch, exportView, ComputedStore} from '@elux/<%= elux %>';
<% } -%>
import {APPState<%= framework ==='vueVuex' ? ', useStore' : '' %>} from '@/Global';
import List from './List.vue';
import Detail from './Detail.vue';
import Edit from './Edit.vue';
import {ListView, ItemView, ItemDetail} from '../entity';

export interface StoreProps {
  listView?: ListView;
  itemView?: ItemView;
  itemDetail?: ItemDetail;
}

<% if(framework ==='reactRedux'){ -%>
function mapStateToProps(appState: APPState): StoreProps {
  const routeParams = appState.route.params;
  const {listView, itemView} = routeParams.article || {};
  const {itemDetail} = appState.article;
  return {listView, itemView, itemDetail};
}

const Component: FC<StoreProps & {dispatch: Dispatch}> = ({listView, itemView, itemDetail, dispatch}) => {
  return (
    <>
      {listView === 'list' && <List />}
      {itemView === 'detail' && itemDetail && <Detail itemDetail={itemDetail} />}
      {itemView === 'edit' && itemDetail && <Edit itemDetail={itemDetail} dispatch={dispatch} />}
    </>
  );
};

export default connectRedux(mapStateToProps)(Component);
<% }else{ -%>
function mapStateToProps({route, article}: APPState): ComputedStore<StoreProps> {
  return {
    listView: () => route.params.article?.listView,
    itemView: () => route.params.article?.itemView,
    itemDetail: () => article.itemDetail,
  };
}

const Component: DefineComponent<{}> = defineComponent({
  name: 'ArticleMain',
  <%_ if(render ==='tpl'){ -%>
  components: {
    List,
    Detail,
    Edit,
  },
  <%_ } -%>
  setup() {
    const store = useStore();
    const dispatch: Dispatch = store.dispatch;
    const computedStore = mapStateToProps(store.getState());
    const listView = computed(computedStore.listView);
    const itemView = computed(computedStore.itemView);
    const itemDetail = computed(computedStore.itemDetail);
    return {listView, itemView, itemDetail, dispatch};
  },
  <%_ if(render !=='tpl'){ -%>
  render() {
    const {listView, itemView, itemDetail, dispatch} = this;
    return (
      <>
        {listView === 'list' && <List />}
        {itemView === 'detail' && itemDetail && <Detail itemDetail={itemDetail} />}
        {itemView === 'edit' && itemDetail && <Edit itemDetail={itemDetail} dispatch={dispatch} />}
      </>
    );
  },
  <%_ } -%>
});

export default exportView(Component);
<% } -%>
