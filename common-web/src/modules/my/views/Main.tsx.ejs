<% if(render ==='tpl'){ -%>
<template>
  <UserSummary v-if="subView === 'userSummary'" />
</template>
<% } -%>
<% if(framework ==='reactRedux'){ -%>
import {FC} from 'react';
import {connectRedux} from '@elux/<%= elux %>';
<% }else{ -%>
import {defineComponent, computed, DefineComponent} from 'vue';
import {exportView, ComputedStore} from '@elux/<%= elux %>';
<% } -%>
import {APPState<%= framework ==='vueVuex' ? ', useStore' : '' %>} from '@/Global';
import UserSummary from './UserSummary.vue';
import {SubView} from '../entity';

export interface StoreProps {
  subView?: SubView;
}

<% if(framework ==='reactRedux'){ -%>
function mapStateToProps(appState: APPState): StoreProps {
  const routeParams = appState.route.params;
  return {subView: routeParams.my?.subView};
}

const Component: FC<StoreProps> = ({subView}) => {
  return <>{subView === 'userSummary' && <UserSummary />}</>;
};

export default connectRedux(mapStateToProps)(Component);
<% }else{ -%>
function mapStateToProps({route}: APPState): ComputedStore<StoreProps> {
  return {
    subView: () => route.params.my?.subView,
  };
}

const Component: DefineComponent<{}> = defineComponent({
  name: 'MyMain',
  <%_ if(render ==='tpl'){ -%>
  components: {
    UserSummary,
  },
  <%_ } -%>
  setup() {
    const store = useStore();
    const computedStore = mapStateToProps(store.getState());
    const subView = computed(computedStore.subView);
    return {subView};
  },
  <%_ if(render !=='tpl'){ -%>
  render() {
    const {subView} = this;
    return <>{subView === 'userSummary' && <UserSummary />}</>;
  },
  <%_ } -%>
});

export default exportView(Component);
<% } -%>
