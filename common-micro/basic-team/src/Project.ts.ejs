/* eslint-disable @typescript-eslint/explicit-module-boundary-types */
import {createRouteModule, DeepPartial, safeJsonParse, exportModule, exportComponent, EmptyModuleHandlers, PagenameMap} from '@elux/<%= elux %>';
import {RouteParams} from '@/Global';
import stage from '@/modules/stage';

type PartialRouteParams = DeepPartial<RouteParams>;

const pagenameMap: PagenameMap<'/index' | '/login'> = {
  '/index': {
    pathToParams() {
      const pathParams: PartialRouteParams = {stage: {subView: 'login'}};
      return pathParams;
    },
    paramsToPath() {
      return [];
    },
  },
  '/login': {
    pathToParams() {
      const pathParams: PartialRouteParams = {stage: {subView: 'login'}};
      return pathParams;
    },
    paramsToPath() {
      return [];
    },
  },
};
const routeModule = createRouteModule('route', pagenameMap, {
  in(nativeLocation) {
    const {pathname, query} = nativeLocation;
    const args = safeJsonParse(query);
    return {pathmatch: pathname, args};
  },
  out(eluxLocation) {
    const {pathmatch, args} = eluxLocation;
    return {pathname: pathmatch, query: Object.keys(args).length ? JSON.stringify(args) : ''};
  },
});

export const MockComponent = exportComponent(() => null);

export const moduleGetter = {
  route: () => routeModule,
  stage: () => stage,
  article: () => exportModule('article', EmptyModuleHandlers, {}, {main: MockComponent}),
  my: () => exportModule('my', EmptyModuleHandlers, {}, {main: MockComponent}),
};

export type ModuleGetter = typeof moduleGetter;
